name: Release

on:
  push:
    branches:
      - main

concurrency: ${{ github.workflow }}-${{ github.ref }}

jobs:
  release:
    name: Release

    runs-on: ubuntu-latest

    permissions:
      contents: write
      pull-requests: write

    steps:
      - name: Checkout Repo
        uses: actions/checkout@v4
        with:
          # Fetch all history for all tags and branches, so that Changesets can determine the version bump
          fetch-depth: 0

      - uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: npm

      - name: Install Dependencies
        run: npm ci

      - name: Create Release Pull Request or Publish to npm
        id: changesets
        uses: changesets/action@v1
        with:
          publish: npm run release
          commit: "chore: release"
          title: "Merge to release"
        env:
          NPM_TOKEN: ${{ secrets.NPM_TOKEN }}
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Add build archives to new release
        if: steps.changesets.outputs.published == 'true'
        run: |
          # Create an archive for the `build` directory (zip and tar.gz formats)
          zip -r build.zip build
          tar -czvf build.tar.gz build

          # Upload the archive to all published packages + the package archive itself
          echo '${{ steps.changesets.outputs.publishedPackages }}' | jq -r '.[]|[.name, .version] | @tsv' |
          while IFS=$'\t' read -r name version; do
            archive_name=$(npm pack --workspace "$name" --json | jq -r '.[0].filename')
            tag="$name@$version"

            # Upload the archives to the release
            gh release upload $tag build.zip --clobber
            gh release upload $tag build.tar.gz --clobber
            gh release upload $tag $archive_name --clobber
          done

          # Clean up the archive files
          rm build.zip build.tar.gz *.tgz
        env:
          GH_TOKEN: ${{ github.token }}
